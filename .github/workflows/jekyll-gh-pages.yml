# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  # 監控 main 分支的變更
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  # 支援手動觸發
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    steps:
      # 1. 檢出 Public Repository
      - name: Checkout Public Repository
        uses: actions/checkout@v4

      # 2. 檢出 Private Repository (SingleFile-Archives)
      - name: Checkout Private Repository
        uses: actions/checkout@v4
        #with:
        #  repository: ${{ secrets.MY_PRIVATE_REPOSITORY }}
        #  token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} # Private Token
        #  path: singlefile-repo # 提取到此資料夾

      # 3. 創建 singlefile-repo 目錄（如果不存在），然後從 Public Repo 複製必要檔案
      - name: Copy index_sample, *.css, *.sh to singlefile-repo
        run: |
          # 確保 singlefile-repo 目錄存在，並將檔案拷貝到 singlefile-repo 目錄
          mkdir -p singlefile-repo
          cp index_sample *.css *.sh singlefile-repo/

      # 5. 自動生成檔案清單
      - name: Generate File List
        run: |
          sh ./singlefile-repo/export-filename.sh 
          cd singlefile-repo
          sh ./replace-html.sh 
          rm -f *.sh index_sample README.md
          cd .. 

      # 7. 檢查生成的檔案
      - name: List Directory Structure
        run: |
          #echo "List Folder:  -- _site -- "
          #ls -al _site
          #cat _site/index.html
          #echo "+++++++++++++++++++++++++++++++"
          echo "List Folder:  -- singlefile-rep -- "
          ls -al singlefile-repo
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./singlefile-repo
          destination: ./_site
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
